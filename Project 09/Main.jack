/**
 *
 */
class Main {

    static Board board;
    static Drawer drawer;
    static bool keepPlaying;
    static int player;
    static int input;
    static bool move;


    /** Returns the int gotten from player keyboard input */
    function int getPlayerInput() {
        var int input; //TODO this might raise bug if mixed with field above

        let input = Keyboard.readInt("Enter number between 1 and 9");
        return input;
    }

    /**
     *
     */
    function void gameFlow() {

        var bool isEndGame;

        let player = 1; //first player first
        let keepPlaying = true;

        while (keepPlaying = true) {
            let input = Main.getPlayerInput();
            //let input = input - 1; // for aligning with the array
            let move = board.makeMove(input, player); //this will also draw

            if (move = true) {
                let isEndGame = board.checkEndGame();
                if (isEndGame = true) {
                    let keepPlaying = false;
                    return;
                }

                //update player
                if (player = 1) {
                    let player = 2;
                }
                else {
                    let player = 1;
                }
            }
        }
        return;
    }



    /** Initializes a new game and starts it. */
    function void main()
    {
        var int winner;

        let drawer = Drawer.new();
        let board = Board.new(drawer);
        do drawer.drawBoard();


        do Main.gameFlow();

        //get winner from board, check if tie or win, print
        let winner = board.getWinner();
        if (winner = 3) {
            do Output.printString("Its a tie! Game Over!");
            return;
        }
        if (winner = 1) {
            do Output.printString("Player X won! Game Over!");
            return;
        }
        if (winner = 2) {
            do Output.printString("Player O won! Game Over!");
            return;
        }


        //TODO check leaks!
        do drawer.dispose();
        do board.dispose();


        return;
    }
}